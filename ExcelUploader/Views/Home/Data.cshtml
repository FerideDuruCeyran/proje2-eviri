@model ExcelUploader.Models.DataListViewModel
@{
    ViewData["Title"] = "Veri Görüntüle";
}

<div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
    <h1 class="h2">
        <i class="bi bi-table"></i>
        Excel Verileri
    </h1>
    <div class="btn-toolbar mb-2 mb-md-0">
        <div class="btn-group me-2">
            <a href="@Url.Action("Upload", "Home")" class="btn btn-primary">
                <i class="bi bi-cloud-upload"></i>
                Yeni Excel Yükle
            </a>
            <button type="button" class="btn btn-success" onclick="exportData()">
                <i class="bi bi-download"></i>
                Dışa Aktar
            </button>
        </div>
    </div>
</div>

<!-- Search and Filters -->
<div class="card mb-4">
    <div class="card-header">
        <h5 class="mb-0">
            <i class="bi bi-search"></i>
            Arama ve Filtreleme
        </h5>
    </div>
    <div class="card-body">
        <form method="get" action="@Url.Action("Data", "Home")" class="row g-3">
            <div class="col-md-4">
                <label class="form-label">Arama</label>
                <input type="text" name="searchTerm" class="form-control" 
                       value="@Model.SearchTerm" placeholder="Ad, soyad, TC kimlik no...">
            </div>
            <div class="col-md-3">
                <label class="form-label">Filtrele</label>
                <select name="filterBy" class="form-select">
                    <option value="">Tümü</option>
                    @if (Model.FilterBy == "basvuruyili")
                    {
                        <option value="basvuruyili" selected>Başvuru Yılı</option>
                    }
                    else
                    {
                        <option value="basvuruyili">Başvuru Yılı</option>
                    }
                    @if (Model.FilterBy == "hareketliliktipi")
                    {
                        <option value="hareketliliktipi" selected>Hareketlilik Tipi</option>
                    }
                    else
                    {
                        <option value="hareketliliktipi">Hareketlilik Tipi</option>
                    }
                    @if (Model.FilterBy == "odemetipi")
                    {
                        <option value="odemetipi" selected>Ödeme Tipi</option>
                    }
                    else
                    {
                        <option value="odemetipi">Ödeme Tipi</option>
                    }
                    @if (Model.FilterBy == "filename")
                    {
                        <option value="filename" selected>Dosya Adı</option>
                    }
                    else
                    {
                        <option value="filename">Dosya Adı</option>
                    }
                </select>
            </div>
            <div class="col-md-3">
                <label class="form-label">Filtre Değeri</label>
                <input type="text" name="filterValue" class="form-control" 
                       value="@Model.FilterValue" placeholder="Filtre değeri...">
            </div>
            <div class="col-md-2">
                <label class="form-label">&nbsp;</label>
                <div class="d-grid">
                    <button type="submit" class="btn btn-primary">
                        <i class="bi bi-search"></i>
                        Ara
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Data Table -->
<div class="card">
    <div class="card-header d-flex justify-content-between align-items-center">
        <h5 class="mb-0">
            <i class="bi bi-list-ul"></i>
            Veri Listesi
            @if (!string.IsNullOrEmpty(Model.SearchTerm))
            {
                <span class="badge bg-primary ms-2">@Model.ExcelData.Count sonuç</span>
            }
        </h5>
        <div class="d-flex align-items-center">
            <span class="text-muted me-3">
                Toplam: @Model.ExcelData.Count kayıt
            </span>
            <div class="btn-group btn-group-sm">
                <button type="button" class="btn btn-outline-secondary" onclick="changePageSize(10)">10</button>
                <button type="button" class="btn btn-outline-secondary" onclick="changePageSize(20)">20</button>
                <button type="button" class="btn btn-outline-secondary" onclick="changePageSize(50)">50</button>
            </div>
        </div>
    </div>
    <div class="card-body">
        @if (Model.ExcelData.Any())
        {
            <div class="table-responsive">
                <table class="table table-hover">
                    <thead>
                        <tr>
                            <th>
                                <a href="@Url.Action("Data", "Home", new { searchTerm = Model.SearchTerm, sortBy = "ad", sortOrder = Model.SortBy == "ad" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                                    Ad
                                    @if (Model.SortBy == "ad")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>
                                <a href="@Url.Action("Data", "Home", new { searchTerm = Model.SearchTerm, sortBy = "soyad", sortOrder = Model.SortBy == "soyad" && Model.SortOrder == "asc" ? "desc" : "asc" })">
                                    Soyad
                                    @if (Model.SortBy == "soyad")
                                    {
                                        <i class="bi bi-arrow-@(Model.SortOrder == "asc" ? "up" : "down")"></i>
                                    }
                                </a>
                            </th>
                            <th>TC Kimlik No</th>
                            <th>Öğrenci No</th>
                            <th>Başvuru Yılı</th>
                            <th>Ödeme Tipi</th>
                            <th>Ödenecek</th>
                            <th>Dosya</th>
                            <th>Durum</th>
                            <th>İşlemler</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.ExcelData)
                        {
                            <tr>
                                <td>
                                    <strong>@(item.Ad ?? "-")</strong>
                                </td>
                                <td>
                                    <strong>@(item.Soyad ?? "-")</strong>
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.TCKimlikNo))
                                    {
                                        <span class="badge bg-info">@item.TCKimlikNo</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.OgrenciNo))
                                    {
                                        <span class="badge bg-secondary">@item.OgrenciNo</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @(item.BasvuruYili ?? "-")
                                </td>
                                <td>
                                    @if (!string.IsNullOrEmpty(item.OdemeTipi))
                                    {
                                        <span class="badge bg-primary">@item.OdemeTipi</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    @if (item.Odenecek.HasValue)
                                    {
                                        <span class="text-success fw-bold">@item.Odenecek.Value.ToString("C")</span>
                                    }
                                    else
                                    {
                                        <span class="text-muted">-</span>
                                    }
                                </td>
                                <td>
                                    <small class="text-muted">
                                        <i class="bi bi-file-earmark-excel text-success"></i>
                                        @item.FileName
                                    </small>
                                </td>
                                <td>
                                    @if (item.IsProcessed)
                                    {
                                        <span class="badge bg-success">
                                            <i class="bi bi-check-circle"></i> İşlendi
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-warning">
                                            <i class="bi bi-clock"></i> Bekliyor
                                        </span>
                                    }
                                </td>
                                <td>
                                    <div class="btn-group btn-group-sm">
                                        <a href="@Url.Action("Edit", "Home", new { id = item.Id })" 
                                           class="btn btn-outline-primary" title="Düzenle">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <button type="button" class="btn btn-outline-danger" 
                                                onclick="deleteRecord(@item.Id)" title="Sil">
                                            <i class="bi bi-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            @if (Model.TotalPages > 1)
            {
                <nav aria-label="Sayfa navigasyonu">
                    <ul class="pagination justify-content-center">
                        @if (Model.CurrentPage > 1)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Data", "Home", new { page = Model.CurrentPage - 1, searchTerm = Model.SearchTerm, sortBy = Model.SortBy, sortOrder = Model.SortOrder })">
                                    <i class="bi bi-chevron-left"></i>
                                </a>
                            </li>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                                <a class="page-link" href="@Url.Action("Data", "Home", new { page = i, searchTerm = Model.SearchTerm, sortBy = Model.SortBy, sortOrder = Model.SortOrder })">
                                    @i
                                </a>
                            </li>
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <li class="page-item">
                                <a class="page-link" href="@Url.Action("Data", "Home", new { page = Model.CurrentPage + 1, searchTerm = Model.SearchTerm, sortBy = Model.SortBy, sortOrder = Model.SortOrder })">
                                    <i class="bi bi-chevron-right"></i>
                                </a>
                            </li>
                        }
                    </ul>
                </nav>
            }
        }
        else
        {
            <div class="text-center py-5">
                <i class="bi bi-inbox text-muted" style="font-size: 4rem;"></i>
                <h4 class="text-muted mt-3">Veri Bulunamadı</h4>
                <p class="text-muted">
                    @if (!string.IsNullOrEmpty(Model.SearchTerm))
                    {
                        <span>"@Model.SearchTerm" için sonuç bulunamadı.</span>
                    }
                    else
                    {
                        <span>Henüz yüklenen Excel verisi bulunmuyor.</span>
                    }
                </p>
                <a href="@Url.Action("Upload", "Home")" class="btn btn-primary">
                    <i class="bi bi-cloud-upload"></i>
                    İlk Excel Dosyasını Yükle
                </a>
            </div>
        }
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="bi bi-exclamation-triangle text-danger"></i>
                    Kayıt Silme Onayı
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Bu kaydı silmek istediğinizden emin misiniz?</p>
                <p class="text-muted small">Bu işlem geri alınamaz.</p>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <form id="deleteForm" method="post" style="display: inline;">
                    <button type="submit" class="btn btn-danger">
                        <i class="bi bi-trash"></i>
                        Sil
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function deleteRecord(id) {
            const modal = new bootstrap.Modal(document.getElementById('deleteModal'));
            const form = document.getElementById('deleteForm');
            
            form.action = '@Url.Action("Delete", "Home")';
            form.innerHTML = `
                <input type="hidden" name="id" value="${id}" />
                <button type="submit" class="btn btn-danger">
                    <i class="bi bi-trash"></i>
                    Sil
                </button>
            `;
            
            modal.show();
        }

        function changePageSize(size) {
            const url = new URL(window.location);
            url.searchParams.set('pageSize', size);
            url.searchParams.set('page', '1');
            window.location.href = url.toString();
        }

        function exportData() {
            const searchTerm = '@Model.SearchTerm';
            const filterBy = '@Model.FilterBy';
            const filterValue = '@Model.FilterValue';
            
            let exportUrl = '@Url.Action("Export", "Home")';
            if (searchTerm || filterBy) {
                exportUrl += '?';
                if (searchTerm) exportUrl += `searchTerm=${encodeURIComponent(searchTerm)}&`;
                if (filterBy) exportUrl += `filterBy=${encodeURIComponent(filterBy)}&`;
                if (filterValue) exportUrl += `filterValue=${encodeURIComponent(filterValue)}`;
            }
            
            window.location.href = exportUrl;
        }

        // Auto-submit form on filter change
        document.addEventListener('DOMContentLoaded', function() {
            const filterSelect = document.querySelector('select[name="filterBy"]');
            const filterValue = document.querySelector('input[name="filterValue"]');
            
            filterSelect.addEventListener('change', function() {
                if (this.value) {
                    filterValue.focus();
                }
            });
        });
    </script>
}
